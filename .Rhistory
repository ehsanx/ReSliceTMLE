source("R/main_functions.R")
source("R/tmle_variants.R")
source("R/utilities.R")
install.packages(c(
"tidyverse", "tmle", "SuperLearner", "glmnet", "gam", "foreach",
"nnls", "dplyr", "stringr", "tibble", "readr", "lubridate", "forcats"
))
library(tidyverse)
library(tmle)
library(SuperLearner)
library(glmnet)
library(gam)
library(nnls)
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
install.packages(c("tidyverse", "tmle", "SuperLearner", "glmnet", "gam", "foreach", "nnls", "dplyr", "stringr", "tibble", "readr", "lubridate", "forcats"))
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
multi_result$raw_final
devtools::document()
devtools::build()
devtools::load_all()
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
library(ReSliceTMLE)
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
devtools::document()
devtools::build()
devtools::load_all()
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
library(tidyverse)
library(tmle)
library(SuperLearner)
library(glmnet)
library(gam)
library(nnls)
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
list.files(path = ".", recursive = TRUE, full.names = TRUE)
rm(list = c("combine_simulation_results", "create_sl_library", "cvq_tmle", "cvq_tmle_multiple",
"doublecrossfit_tmle", "format_results", "format_results_with_sim_id", "fullcv_tmle",
"fullcv_tmle_multiple", "prepare_tmle_data", "run_multiple_tmle_variants", "run_tmle_analysis",
"singlecrossfit_tmle", "split_simulation_data", "vanilla_tmle"))
devtools::document()
rm(list = ls())
devtools::load_all()
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
ReSliceTMLE::load_dependencies()
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
devtools::document()
rm(list = ls())
devtools::load_all()
library(ReSliceTMLE)
ReSliceTMLE::load_dependencies()
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = tmle_example_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "doublecrossfit"),
num_repetitions = 5
)
devtools::check()
devtools::build()
?dbart
installed.packages()[, "Package"]
# Get all installed packages
all_pkgs <- installed.packages()[, "Package"]
# Get base/recommended packages (we will not remove these)
base_pkgs <- installed.packages(priority = "base")[, "Package"]
recommended_pkgs <- installed.packages(priority = "recommended")[, "Package"]
# Get only user-installed packages
user_pkgs <- setdiff(all_pkgs, c(base_pkgs, recommended_pkgs))
# Uninstall them
sapply(user_pkgs, remove.packages)
installed.packages()[, "Package"]
warnings()
installed.packages()[, "Package"]
devtools::document()
install.packages("devtools")
install.packages("devtools")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::build()
devtools::load_all()
devtools::document()
remove.packages("fastmap")
install.packages("fastmap")
install.packages("fastmap")
.rs.restartR()
devtools::document()
devtools::install()
.rs.restartR()  # RStudio only
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = test_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "cvq_multiple", "fullcv", "fullcv_multiple", "singlecrossfit"),
num_repetitions = 5
)
library(ReSliceTMLE)  # Replace with your actual package name
ReSliceTMLE::load_dependencies()
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = test_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq", "cvq_multiple", "fullcv", "fullcv_multiple", "doublecrossfit"),
num_repetitions = 3
)
devtools::document()
devtools::install()
.rs.restartR()  # RStudio only
library(ReSliceTMLE)
devtools::document()   # Updates NAMESPACE + .Rd files from roxygen2 tags
devtools::install()    # Rebuilds and installs your package locally
devtools::document()   # Updates NAMESPACE + .Rd files from roxygen2 tags
devtools::document()   # Updates NAMESPACE + .Rd files from roxygen2 tags
devtools::document()   # Updates NAMESPACE + .Rd files from roxygen2 tags
.rs.restartR()  # RStudio only
devtools::document()   # Updates NAMESPACE + .Rd files from roxygen2 tags
devtools::install()
.rs.restartR()
library(ReSliceTMLE)
data("tmle_example_data")
test_data <- tmle_example_data[tmle_example_data$sim_id == 1, ]
multi_result <- run_multiple_tmle_variants(
data = test_data,
sim_id_col = "sim_id",
outcome_var = "Y",
treatment_var = "A",
covariates = c("X1", "X2", "X3", "X4"),
tmle_variants = c("vanilla", "cvq_multiple", "fullcv_multiple", "singlecrossfit", "doublecrossfit"),
num_repetitions = 5
)
ReSliceTMLE::load_dependencies()
